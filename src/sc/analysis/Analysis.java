/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.analysis;

import sc.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgProgramme(AProgProgramme node);
    void caseARegularLdf(ARegularLdf node);
    void caseAEpsLdf(AEpsLdf node);
    void caseARegularDf(ARegularDf node);
    void caseARegularLdvOptional(ARegularLdvOptional node);
    void caseAEpsLdvOptional(AEpsLdvOptional node);
    void caseARegularLdv(ARegularLdv node);
    void caseAEpsLdv(AEpsLdv node);
    void caseARegularLdvBis(ARegularLdvBis node);
    void caseAEpsLdvBis(AEpsLdvBis node);
    void caseARegularVariableDv(ARegularVariableDv node);
    void caseARegularArrayDv(ARegularArrayDv node);
    void caseARegularBi(ARegularBi node);
    void caseARegularLi(ARegularLi node);
    void caseARegularIBis(ARegularIBis node);
    void caseAEpsIBis(AEpsIBis node);
    void caseAAffectI(AAffectI node);
    void caseAIfI(AIfI node);
    void caseAWhileI(AWhileI node);
    void caseAReturnI(AReturnI node);
    void caseAFuncCallI(AFuncCallI node);
    void caseAWriteI(AWriteI node);
    void caseARegularVar(ARegularVar node);
    void caseAArrayVar(AArrayVar node);
    void caseARegularElseBlock(ARegularElseBlock node);
    void caseAEpsElseBlock(AEpsElseBlock node);
    void caseARegularE(ARegularE node);
    void caseAPassE(APassE node);
    void caseARegularAndE(ARegularAndE node);
    void caseAPassAndE(APassAndE node);
    void caseAEqualCompE(AEqualCompE node);
    void caseALowerThanCompE(ALowerThanCompE node);
    void caseAPassCompE(APassCompE node);
    void caseAPlusArithLowE(APlusArithLowE node);
    void caseAMoinsArithLowE(AMoinsArithLowE node);
    void caseAPassArithLowE(APassArithLowE node);
    void caseAMultArithHighE(AMultArithHighE node);
    void caseADivArithHighE(ADivArithHighE node);
    void caseAPassArithHighE(APassArithHighE node);
    void caseARegularNegE(ARegularNegE node);
    void caseAPassNegE(APassNegE node);
    void caseARegularParenthE(ARegularParenthE node);
    void caseAPassParenthE(APassParenthE node);
    void caseANumberElement(ANumberElement node);
    void caseAVariableElement(AVariableElement node);
    void caseAArrayElement(AArrayElement node);
    void caseAReadElement(AReadElement node);
    void caseAFuncCallElement(AFuncCallElement node);
    void caseARegularAppFunction(ARegularAppFunction node);
    void caseARegularLe(ARegularLe node);
    void caseAEpsLe(AEpsLe node);
    void caseARegularEBis(ARegularEBis node);
    void caseAEpsEBis(AEpsEBis node);

    void caseTNb(TNb node);
    void caseTPo(TPo node);
    void caseTPf(TPf node);
    void caseTCo(TCo node);
    void caseTCf(TCf node);
    void caseTAo(TAo node);
    void caseTAf(TAf node);
    void caseTComma(TComma node);
    void caseTSemicolon(TSemicolon node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTEqual(TEqual node);
    void caseTNot(TNot node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTLowerThan(TLowerThan node);
    void caseTVarType(TVarType node);
    void caseTIf(TIf node);
    void caseTThen(TThen node);
    void caseTElse(TElse node);
    void caseTWhile(TWhile node);
    void caseTDo(TDo node);
    void caseTRead(TRead node);
    void caseTWrite(TWrite node);
    void caseTReturn(TReturn node);
    void caseTId(TId node);
    void caseTEspaces(TEspaces node);
    void caseTCommentaire(TCommentaire node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
