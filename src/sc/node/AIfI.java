/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AIfI extends PI
{
    private TIf _if_;
    private PE _e_;
    private TThen _then_;
    private PBi _bi_;
    private PElseBlock _elseBlock_;

    public AIfI()
    {
        // Constructor
    }

    public AIfI(
        @SuppressWarnings("hiding") TIf _if_,
        @SuppressWarnings("hiding") PE _e_,
        @SuppressWarnings("hiding") TThen _then_,
        @SuppressWarnings("hiding") PBi _bi_,
        @SuppressWarnings("hiding") PElseBlock _elseBlock_)
    {
        // Constructor
        setIf(_if_);

        setE(_e_);

        setThen(_then_);

        setBi(_bi_);

        setElseBlock(_elseBlock_);

    }

    @Override
    public Object clone()
    {
        return new AIfI(
            cloneNode(this._if_),
            cloneNode(this._e_),
            cloneNode(this._then_),
            cloneNode(this._bi_),
            cloneNode(this._elseBlock_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIfI(this);
    }

    public TIf getIf()
    {
        return this._if_;
    }

    public void setIf(TIf node)
    {
        if(this._if_ != null)
        {
            this._if_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._if_ = node;
    }

    public PE getE()
    {
        return this._e_;
    }

    public void setE(PE node)
    {
        if(this._e_ != null)
        {
            this._e_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._e_ = node;
    }

    public TThen getThen()
    {
        return this._then_;
    }

    public void setThen(TThen node)
    {
        if(this._then_ != null)
        {
            this._then_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._then_ = node;
    }

    public PBi getBi()
    {
        return this._bi_;
    }

    public void setBi(PBi node)
    {
        if(this._bi_ != null)
        {
            this._bi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._bi_ = node;
    }

    public PElseBlock getElseBlock()
    {
        return this._elseBlock_;
    }

    public void setElseBlock(PElseBlock node)
    {
        if(this._elseBlock_ != null)
        {
            this._elseBlock_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._elseBlock_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._if_)
            + toString(this._e_)
            + toString(this._then_)
            + toString(this._bi_)
            + toString(this._elseBlock_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._if_ == child)
        {
            this._if_ = null;
            return;
        }

        if(this._e_ == child)
        {
            this._e_ = null;
            return;
        }

        if(this._then_ == child)
        {
            this._then_ = null;
            return;
        }

        if(this._bi_ == child)
        {
            this._bi_ = null;
            return;
        }

        if(this._elseBlock_ == child)
        {
            this._elseBlock_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._if_ == oldChild)
        {
            setIf((TIf) newChild);
            return;
        }

        if(this._e_ == oldChild)
        {
            setE((PE) newChild);
            return;
        }

        if(this._then_ == oldChild)
        {
            setThen((TThen) newChild);
            return;
        }

        if(this._bi_ == oldChild)
        {
            setBi((PBi) newChild);
            return;
        }

        if(this._elseBlock_ == oldChild)
        {
            setElseBlock((PElseBlock) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
